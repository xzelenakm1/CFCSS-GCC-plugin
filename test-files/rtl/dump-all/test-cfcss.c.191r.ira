
;; Function main (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r76: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r76,l0) best GENERAL_REGS, cover GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r75,l0) best GENERAL_REGS, cover GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r74,l0) best GENERAL_REGS, cover GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r73,l0) best GENERAL_REGS, cover GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r71,l0) best GENERAL_REGS, cover GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred AREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a0 (r64,l0) best AREG, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r64,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a1(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a2(r75,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a3(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a4(r76,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a5(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a6(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a7(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a8(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a9(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a10(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a11(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a12(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a13(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a14(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a15(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7
  a16(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:8
  a17(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 LEGACY_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26,26 SSE_REGS:26,26 MMX_REGS:26,26 MEM:7

   Insn 57(l0): point = 0
   Insn 54(l0): point = 2
   Insn 50(l0): point = 4
   Insn 49(l0): point = 6
   Insn 47(l0): point = 9
   Insn 46(l0): point = 11
   Insn 42(l0): point = 14
   Insn 39(l0): point = 17
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 62(l0): point = 30
   Insn 29(l0): point = 32
   Insn 28(l0): point = 34
   Insn 27(l0): point = 36
   Insn 26(l0): point = 38
   Insn 25(l0): point = 40
   Insn 24(l0): point = 42
   Insn 22(l0): point = 45
   Insn 21(l0): point = 47
   Insn 20(l0): point = 49
   Insn 19(l0): point = 51
   Insn 18(l0): point = 53
   Insn 17(l0): point = 55
   Insn 16(l0): point = 57
   Insn 15(l0): point = 59
   Insn 60(l0): point = 62
   Insn 11(l0): point = 64
   Insn 10(l0): point = 66
   Insn 9(l0): point = 68
   Insn 8(l0): point = 70
   Insn 7(l0): point = 72
   Insn 6(l0): point = 74
   Insn 5(l0): point = 76
 a0(r64): [3..4]
 a1(r63): [5..6]
 a2(r75): [18..19]
 a3(r62): [18..23]
 a4(r76): [20..21]
 a5(r73): [24..25]
 a6(r74): [26..27]
 a7(r71): [33..34]
 a8(r61): [33..38]
 a9(r72): [35..36]
 a10(r69): [39..40]
 a11(r70): [41..42]
 a12(r60): [48..49]
 a13(r59): [48..55]
 a14(r67): [50..51]
 a15(r68): [52..53]
 a16(r65): [56..57]
 a17(r66): [58..59]
Compressing live ranges: from 79 to 30 - 37%
Ranges after the compression:
 a0(r64): [0..1]
 a1(r63): [2..3]
 a2(r75): [4..5]
 a3(r62): [4..7]
 a4(r76): [6..7]
 a5(r73): [8..9]
 a6(r74): [10..11]
 a7(r71): [12..13]
 a8(r61): [12..15]
 a9(r72): [14..15]
 a10(r69): [16..17]
 a11(r70): [18..19]
 a12(r60): [20..21]
 a13(r59): [20..25]
 a14(r67): [22..23]
 a15(r68): [24..25]
 a16(r65): [26..27]
 a17(r66): [28..29]
  regions=2, blocks=9, points=30
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   13:r59  l0     1   12:r60  l0     0    8:r61  l0     1    3:r62  l0     1
    1:r63  l0     0    0:r64  l0     0   16:r65  l0     0   17:r66  l0     0
   14:r67  l0     0   15:r68  l0     0   10:r69  l0     0   11:r70  l0     0
    7:r71  l0     0    9:r72  l0     0    5:r73  l0     0    6:r74  l0     0
    2:r75  l0     0    4:r76  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 
insn=7, live_throughout: 7, dead_or_set: 
insn=8, live_throughout: 7, dead_or_set: 
insn=9, live_throughout: 7, dead_or_set: 
insn=10, live_throughout: 7, dead_or_set: 
insn=11, live_throughout: 7, dead_or_set: 
insn=60, live_throughout: 7, dead_or_set: 
insn=45, live_throughout: 7, dead_or_set: 
insn=15, live_throughout: 7, dead_or_set: 66
insn=16, live_throughout: 7, dead_or_set: 65, 66
insn=17, live_throughout: 7, dead_or_set: 59, 65
insn=18, live_throughout: 7, 59, dead_or_set: 68
insn=19, live_throughout: 7, 59, dead_or_set: 67, 68
insn=20, live_throughout: 7, 59, dead_or_set: 60, 67
insn=21, live_throughout: 7, dead_or_set: 59, 60
insn=22, live_throughout: 7, dead_or_set: 
insn=24, live_throughout: 7, dead_or_set: 70
insn=25, live_throughout: 7, dead_or_set: 69, 70
insn=26, live_throughout: 7, dead_or_set: 61, 69
insn=27, live_throughout: 7, 61, dead_or_set: 72
insn=28, live_throughout: 7, 61, dead_or_set: 71, 72
insn=29, live_throughout: 7, dead_or_set: 61, 71
insn=62, live_throughout: 7, dead_or_set: 
insn=32, live_throughout: 7, dead_or_set: 
insn=34, live_throughout: 7, dead_or_set: 74
insn=35, live_throughout: 7, dead_or_set: 73, 74
insn=36, live_throughout: 7, dead_or_set: 62, 73
insn=37, live_throughout: 7, 62, dead_or_set: 76
insn=38, live_throughout: 7, 62, dead_or_set: 75, 76
insn=39, live_throughout: 7, dead_or_set: 62, 75
insn=40, live_throughout: 7, dead_or_set: 
insn=42, live_throughout: 7, dead_or_set: 
insn=43, live_throughout: 7, dead_or_set: 
insn=46, live_throughout: 7, dead_or_set: 
insn=47, live_throughout: 7, dead_or_set: 
insn=49, live_throughout: 7, dead_or_set: 63
insn=50, live_throughout: 7, dead_or_set: 63, 64
insn=54, live_throughout: 7, dead_or_set: 0, 64
insn=57, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 17
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 26
changing reg in insn 29
changing reg in insn 36
changing reg in insn 39
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 54
changing reg in insn 16
changing reg in insn 17
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 18
changing reg in insn 19
changing reg in insn 25
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 27
changing reg in insn 28
changing reg in insn 35
changing reg in insn 36
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 39
changing reg in insn 37
changing reg in insn 38
deleting insn with uid = 50.
deleting insn with uid = 54.
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 6[bp] 17[flags]
;;  ref usage 	r0={15d,15u} r1={4d,3u} r2={1d} r4={1d} r5={1d} r6={1d,30u} r7={1d,8u} r17={3d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 97{38d,59u,0e} in 34{34 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	

;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 a+0 S4 A64])
        (const_int 1 [0x1])) ../../test-cfcss.c:4 64 {*movsi_internal}
     (nil))

(insn 6 5 7 2 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 a+4 S4 A32])
        (const_int 2 [0x2])) ../../test-cfcss.c:4 64 {*movsi_internal}
     (nil))

(insn 7 6 8 2 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 a+8 S4 A64])
        (const_int 3 [0x3])) ../../test-cfcss.c:4 64 {*movsi_internal}
     (nil))

(insn 8 7 9 2 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 b+0 S4 A64])
        (const_int 2 [0x2])) ../../test-cfcss.c:5 64 {*movsi_internal}
     (nil))

(insn 9 8 10 2 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 b+4 S4 A32])
        (const_int 3 [0x3])) ../../test-cfcss.c:5 64 {*movsi_internal}
     (nil))

(insn 10 9 11 2 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 b+8 S4 A64])
        (const_int 2 [0x2])) ../../test-cfcss.c:5 64 {*movsi_internal}
     (nil))

(insn 11 10 60 2 (set (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ../../test-cfcss.c:7 64 {*movsi_internal}
     (nil))

(jump_insn 60 11 61 2 (set (pc)
        (label_ref 43)) ../../test-cfcss.c:9 606 {jump}
     (nil)
 -> 43)
;; End of basic block 2 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  7 [100.0%] 

(barrier 61 60 45)

;; Start of basic block ( 7) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 65 66 67 68

;; Pred edge  7
(code_label 45 61 14 3 5 "" [1 uses])

(note 14 45 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 (set (reg:SI 0 ax [66])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:10 64 {*movsi_internal}
     (nil))

(insn 16 15 17 3 (set (reg:DI 0 ax [65])
        (sign_extend:DI (reg:SI 0 ax [66]))) ../../test-cfcss.c:10 126 {*extendsidi2_rex64}
     (nil))

(insn 17 16 18 3 (set (reg:SI 1 dx [orig:59 D.1986 ] [59])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [65])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -48 [0xffffffffffffffd0])) [0 a S4 A32])) ../../test-cfcss.c:10 64 {*movsi_internal}
     (nil))

(insn 18 17 19 3 (set (reg:SI 0 ax [68])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:10 64 {*movsi_internal}
     (nil))

(insn 19 18 20 3 (set (reg:DI 0 ax [67])
        (sign_extend:DI (reg:SI 0 ax [68]))) ../../test-cfcss.c:10 126 {*extendsidi2_rex64}
     (nil))

(insn 20 19 21 3 (set (reg:SI 0 ax [orig:60 D.1987 ] [60])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [67])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -32 [0xffffffffffffffe0])) [0 b S4 A32])) ../../test-cfcss.c:10 64 {*movsi_internal}
     (nil))

(insn 21 20 22 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:59 D.1986 ] [59])
            (reg:SI 0 ax [orig:60 D.1987 ] [60]))) ../../test-cfcss.c:10 6 {*cmpsi_1}
     (nil))

(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ../../test-cfcss.c:10 591 {*jcc_1}
     (nil)
 -> 32)
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 61 69 70 71 72

;; Pred edge  3 (fallthru)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 (set (reg:SI 0 ax [70])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:11 64 {*movsi_internal}
     (nil))

(insn 25 24 26 4 (set (reg:DI 0 ax [69])
        (sign_extend:DI (reg:SI 0 ax [70]))) ../../test-cfcss.c:11 126 {*extendsidi2_rex64}
     (nil))

(insn 26 25 27 4 (set (reg:SI 1 dx [orig:61 D.1990 ] [61])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [69])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -48 [0xffffffffffffffd0])) [0 a S4 A32])) ../../test-cfcss.c:11 64 {*movsi_internal}
     (nil))

(insn 27 26 28 4 (set (reg:SI 0 ax [72])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:11 64 {*movsi_internal}
     (nil))

(insn 28 27 29 4 (set (reg:DI 0 ax [71])
        (sign_extend:DI (reg:SI 0 ax [72]))) ../../test-cfcss.c:11 126 {*extendsidi2_rex64}
     (nil))

(insn 29 28 62 4 (set (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [71])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -16 [0xfffffffffffffff0])) [0 x S4 A32])
        (reg:SI 1 dx [orig:61 D.1990 ] [61])) ../../test-cfcss.c:11 64 {*movsi_internal}
     (nil))

(jump_insn 62 29 63 4 (set (pc)
        (label_ref 40)) 606 {jump}
     (nil)
 -> 40)
;; End of basic block 4 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  6 [100.0%] 

(barrier 63 62 32)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 62 73 74 75 76

;; Pred edge  3
(code_label 32 63 33 5 3 "" [1 uses])

(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 5 (set (reg:SI 0 ax [74])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:14 64 {*movsi_internal}
     (nil))

(insn 35 34 36 5 (set (reg:DI 0 ax [73])
        (sign_extend:DI (reg:SI 0 ax [74]))) ../../test-cfcss.c:14 126 {*extendsidi2_rex64}
     (nil))

(insn 36 35 37 5 (set (reg:SI 1 dx [orig:62 D.1992 ] [62])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [73])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -32 [0xffffffffffffffe0])) [0 b S4 A32])) ../../test-cfcss.c:14 64 {*movsi_internal}
     (nil))

(insn 37 36 38 5 (set (reg:SI 0 ax [76])
        (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:14 64 {*movsi_internal}
     (nil))

(insn 38 37 39 5 (set (reg:DI 0 ax [75])
        (sign_extend:DI (reg:SI 0 ax [76]))) ../../test-cfcss.c:14 126 {*extendsidi2_rex64}
     (nil))

(insn 39 38 40 5 (set (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [75])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -16 [0xfffffffffffffff0])) [0 x S4 A32])
        (reg:SI 1 dx [orig:62 D.1992 ] [62])) ../../test-cfcss.c:14 64 {*movsi_internal}
     (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  6 (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

;; Pred edge  5 (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 40 39 41 6 4 "" [1 uses])

(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 6 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../../test-cfcss.c:16 252 {*addsi_1}
     (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  7 (fallthru)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]

;; Pred edge  6 (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 43 42 44 7 2 "" [1 uses])

(note 44 43 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 2 [0x2]))) ../../test-cfcss.c:9 6 {*cmpsi_1}
     (nil))

(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ../../test-cfcss.c:9 591 {*jcc_1}
     (nil)
 -> 45)
;; End of basic block 7 -> ( 3 8)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 63 64

;; Pred edge  7 (fallthru)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 57 8 (set (reg:SI 0 ax [orig:63 D.1993 ] [63])
        (const_int 0 [0])) ../../test-cfcss.c:19 64 {*movsi_internal}
     (nil))

(insn 57 49 64 8 (use (reg/i:SI 0 ax)) ../../test-cfcss.c:20 -1
     (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 64 57 0 NOTE_INSN_DELETED)

