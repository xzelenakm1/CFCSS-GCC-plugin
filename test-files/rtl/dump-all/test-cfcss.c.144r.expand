
;; Function main (main)

main ()
{
  int i;
  int x[3];
  int b[3];
  int a[3];
  int D.1993;
  int D.1992;
  int D.1990;
  int D.1987;
  int D.1986;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  a[0] = 1;
  a[1] = 2;
  a[2] = 3;
  b[0] = 2;
  b[1] = 3;
  b[2] = 2;
  i_2 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  D.1986_3 = a[i_1];
  D.1987_4 = b[i_1];
  if (D.1986_3 < D.1987_4)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.1990_5 = a[i_1];
  x[i_1] = D.1990_5;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.1992_6 = b[i_1];
  x[i_1] = D.1992_6;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  i_7 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_2(2), i_7(6)>
  if (i_1 <= 2)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.1993_8 = 0;
  return D.1993_8;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (D.1986_3 - 3 )
Partition 4 (D.1987_4 - 4 )
Partition 5 (D.1990_5 - 5 )
Partition 6 (D.1992_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 8 (D.1993_8 - 8 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (i_7 - 7 )


Live on entry to BB2 : 

Live on entry to BB3 : i_1  

Live on entry to BB4 : i_1  

Live on entry to BB5 : i_1  

Live on entry to BB6 : i_1  

Live on entry to BB7 : 

Live on entry to BB8 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_7
(2147483646) i_1 <-> i_2

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (i_7 - 7 )

Coalesce list: (1)i_1 & (7)i_7 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (7)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (2)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 7 )
Partition 1 (D.1986_3 - 3 )
Partition 2 (D.1987_4 - 4 )
Partition 3 (D.1990_5 - 5 )
Partition 4 (D.1992_6 - 6 )
Partition 5 (D.1993_8 - 8 )

main ()
{
  int i;
  int x[3];
  int b[3];
  int a[3];
  int D.1993;
  int D.1992;
  int D.1990;
  int D.1987;
  int D.1986;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  a[0] = 1;
  a[1] = 2;
  a[2] = 3;
  b[0] = 2;
  b[1] = 3;
  b[2] = 2;
  i_2 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  D.1986_3 = a[i_1];
  D.1987_4 = b[i_1];
  if (D.1986_3 < D.1987_4)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.1990_5 = a[i_1];
  x[i_1] = D.1990_5;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 3 (false)
  D.1992_6 = b[i_1];
  x[i_1] = D.1992_6;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  i_7 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_2(2), i_7(6)>
  if (i_1 <= 2)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  D.1993_8 = 0;
  return D.1993_8;
  # SUCC: EXIT

}


Partition 0: size 4 align 4
	i_1, offset 0
Partition 3: size 12 align 16
	x, offset 0
Partition 2: size 12 align 16
	b, offset 0
Partition 1: size 12 align 16
	a, offset 0

;; Generating RTL for gimple basic block 2

;; a[0] = 1;

(insn 5 4 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 a+0 S4 A64])
        (const_int 1 [0x1])) ../../test-cfcss.c:4 -1
     (nil))

;; a[1] = 2;

(insn 6 5 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 a+4 S4 A32])
        (const_int 2 [0x2])) ../../test-cfcss.c:4 -1
     (nil))

;; a[2] = 3;

(insn 7 6 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 a+8 S4 A64])
        (const_int 3 [0x3])) ../../test-cfcss.c:4 -1
     (nil))

;; b[0] = 2;

(insn 8 7 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 b+0 S4 A64])
        (const_int 2 [0x2])) ../../test-cfcss.c:5 -1
     (nil))

;; b[1] = 3;

(insn 9 8 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 b+4 S4 A32])
        (const_int 3 [0x3])) ../../test-cfcss.c:5 -1
     (nil))

;; b[2] = 2;

(insn 10 9 0 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 b+8 S4 A64])
        (const_int 2 [0x2])) ../../test-cfcss.c:5 -1
     (nil))

;; i_2 = 0;

(insn 11 10 0 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ../../test-cfcss.c:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; D.1986_3 = a[i_1];

(insn 15 14 16 (set (reg:SI 66)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

(insn 16 15 17 (set (reg:DI 65)
        (sign_extend:DI (reg:SI 66))) ../../test-cfcss.c:10 -1
     (nil))

(insn 17 16 0 (set (reg:SI 59 [ D.1986 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 65)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -48 [0xffffffffffffffd0])) [0 a S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

;; D.1987_4 = b[i_1];

(insn 18 17 19 (set (reg:SI 68)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

(insn 19 18 20 (set (reg:DI 67)
        (sign_extend:DI (reg:SI 68))) ../../test-cfcss.c:10 -1
     (nil))

(insn 20 19 0 (set (reg:SI 60 [ D.1987 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 67)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -32 [0xffffffffffffffe0])) [0 b S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

;; if (D.1986_3 < D.1987_4)

(insn 21 20 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.1986 ])
            (reg:SI 60 [ D.1987 ]))) ../../test-cfcss.c:10 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ../../test-cfcss.c:10 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; D.1990_5 = a[i_1];

(insn 24 23 25 (set (reg:SI 70)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:11 -1
     (nil))

(insn 25 24 26 (set (reg:DI 69)
        (sign_extend:DI (reg:SI 70))) ../../test-cfcss.c:11 -1
     (nil))

(insn 26 25 0 (set (reg:SI 61 [ D.1990 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 69)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -48 [0xffffffffffffffd0])) [0 a S4 A32])) ../../test-cfcss.c:11 -1
     (nil))

;; x[i_1] = D.1990_5;

(insn 27 26 28 (set (reg:SI 72)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:11 -1
     (nil))

(insn 28 27 29 (set (reg:DI 71)
        (sign_extend:DI (reg:SI 72))) ../../test-cfcss.c:11 -1
     (nil))

(insn 29 28 0 (set (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 71)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -16 [0xfffffffffffffff0])) [0 x S4 A32])
        (reg:SI 61 [ D.1990 ])) ../../test-cfcss.c:11 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 32 31 33 3 "" [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; D.1992_6 = b[i_1];

(insn 34 33 35 (set (reg:SI 74)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:14 -1
     (nil))

(insn 35 34 36 (set (reg:DI 73)
        (sign_extend:DI (reg:SI 74))) ../../test-cfcss.c:14 -1
     (nil))

(insn 36 35 0 (set (reg:SI 62 [ D.1992 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 73)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -32 [0xffffffffffffffe0])) [0 b S4 A32])) ../../test-cfcss.c:14 -1
     (nil))

;; x[i_1] = D.1992_6;

(insn 37 36 38 (set (reg:SI 76)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:14 -1
     (nil))

(insn 38 37 39 (set (reg:DI 75)
        (sign_extend:DI (reg:SI 76))) ../../test-cfcss.c:14 -1
     (nil))

(insn 39 38 0 (set (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 75)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -16 [0xfffffffffffffff0])) [0 x S4 A32])
        (reg:SI 62 [ D.1992 ])) ../../test-cfcss.c:14 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 40 39 41 4 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; i_7 = i_1 + 1;

(insn 42 41 0 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../../test-cfcss.c:16 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 43 42 44 2 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 2)

(insn 46 44 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 2 [0x2]))) ../../test-cfcss.c:9 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ../../test-cfcss.c:9 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; D.1993_8 = 0;

(insn 49 48 0 (set (reg:SI 63 [ D.1993 ])
        (const_int 0 [0])) ../../test-cfcss.c:19 -1
     (nil))

;; return D.1993_8;

(insn 50 49 51 (set (reg:SI 64 [ <retval> ])
        (reg:SI 63 [ D.1993 ])) ../../test-cfcss.c:19 -1
     (nil))

(jump_insn 51 50 52 (set (pc)
        (label_ref 0)) ../../test-cfcss.c:19 -1
     (nil))

(barrier 52 51 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 a+0 S4 A64])
        (const_int 1 [0x1])) ../../test-cfcss.c:4 -1
     (nil))

(insn 6 5 7 3 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 a+4 S4 A32])
        (const_int 2 [0x2])) ../../test-cfcss.c:4 -1
     (nil))

(insn 7 6 8 3 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 a+8 S4 A64])
        (const_int 3 [0x3])) ../../test-cfcss.c:4 -1
     (nil))

(insn 8 7 9 3 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 b+0 S4 A64])
        (const_int 2 [0x2])) ../../test-cfcss.c:5 -1
     (nil))

(insn 9 8 10 3 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 b+4 S4 A32])
        (const_int 3 [0x3])) ../../test-cfcss.c:5 -1
     (nil))

(insn 10 9 11 3 (set (mem/s/j/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 b+8 S4 A64])
        (const_int 2 [0x2])) ../../test-cfcss.c:5 -1
     (nil))

(insn 11 10 12 3 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ../../test-cfcss.c:7 -1
     (nil))

(jump_insn 12 11 13 3 (set (pc)
        (label_ref 43)) ../../test-cfcss.c:9 -1
     (nil)
 -> 43)
;; End of basic block 3 -> ( 8)

;; Succ edge  8

(barrier 13 12 45)

;; Start of basic block ( 8) -> 4
;; Pred edge  8
(code_label 45 13 14 4 5 "" [1 uses])

(note 14 45 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 (set (reg:SI 66)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

(insn 16 15 17 4 (set (reg:DI 65)
        (sign_extend:DI (reg:SI 66))) ../../test-cfcss.c:10 -1
     (nil))

(insn 17 16 18 4 (set (reg:SI 59 [ D.1986 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 65)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -48 [0xffffffffffffffd0])) [0 a S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

(insn 18 17 19 4 (set (reg:SI 68)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

(insn 19 18 20 4 (set (reg:DI 67)
        (sign_extend:DI (reg:SI 68))) ../../test-cfcss.c:10 -1
     (nil))

(insn 20 19 21 4 (set (reg:SI 60 [ D.1987 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 67)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -32 [0xffffffffffffffe0])) [0 b S4 A32])) ../../test-cfcss.c:10 -1
     (nil))

(insn 21 20 22 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.1986 ])
            (reg:SI 60 [ D.1987 ]))) ../../test-cfcss.c:10 -1
     (nil))

(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ../../test-cfcss.c:10 -1
     (nil)
 -> 32)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 (set (reg:SI 70)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:11 -1
     (nil))

(insn 25 24 26 5 (set (reg:DI 69)
        (sign_extend:DI (reg:SI 70))) ../../test-cfcss.c:11 -1
     (nil))

(insn 26 25 27 5 (set (reg:SI 61 [ D.1990 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 69)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -48 [0xffffffffffffffd0])) [0 a S4 A32])) ../../test-cfcss.c:11 -1
     (nil))

(insn 27 26 28 5 (set (reg:SI 72)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:11 -1
     (nil))

(insn 28 27 29 5 (set (reg:DI 71)
        (sign_extend:DI (reg:SI 72))) ../../test-cfcss.c:11 -1
     (nil))

(insn 29 28 30 5 (set (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 71)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -16 [0xfffffffffffffff0])) [0 x S4 A32])
        (reg:SI 61 [ D.1990 ])) ../../test-cfcss.c:11 -1
     (nil))

(jump_insn 30 29 31 5 (set (pc)
        (label_ref 40)) ../../test-cfcss.c:11 -1
     (nil)
 -> 40)
;; End of basic block 5 -> ( 7)

;; Succ edge  7

(barrier 31 30 32)

;; Start of basic block ( 4) -> 6
;; Pred edge  4
(code_label 32 31 33 6 3 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 (set (reg:SI 74)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:14 -1
     (nil))

(insn 35 34 36 6 (set (reg:DI 73)
        (sign_extend:DI (reg:SI 74))) ../../test-cfcss.c:14 -1
     (nil))

(insn 36 35 37 6 (set (reg:SI 62 [ D.1992 ])
        (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 73)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -32 [0xffffffffffffffe0])) [0 b S4 A32])) ../../test-cfcss.c:14 -1
     (nil))

(insn 37 36 38 6 (set (reg:SI 76)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) ../../test-cfcss.c:14 -1
     (nil))

(insn 38 37 39 6 (set (reg:DI 75)
        (sign_extend:DI (reg:SI 76))) ../../test-cfcss.c:14 -1
     (nil))

(insn 39 38 40 6 (set (mem/s/j:SI (plus:DI (plus:DI (mult:DI (reg:DI 75)
                        (const_int 4 [0x4]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -16 [0xfffffffffffffff0])) [0 x S4 A32])
        (reg:SI 62 [ D.1992 ])) ../../test-cfcss.c:14 -1
     (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 40 39 41 7 4 "" [1 uses])

(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../../test-cfcss.c:16 -1
     (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 3 7) -> 8
;; Pred edge  3
;; Pred edge  7 (fallthru)
(code_label 43 42 44 8 2 "" [1 uses])

(note 44 43 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 2 [0x2]))) ../../test-cfcss.c:9 -1
     (nil))

(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ../../test-cfcss.c:9 -1
     (nil)
 -> 45)
;; End of basic block 8 -> ( 4 9)

;; Succ edge  4
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 (set (reg:SI 63 [ D.1993 ])
        (const_int 0 [0])) ../../test-cfcss.c:19 -1
     (nil))

(insn 50 49 51 9 (set (reg:SI 64 [ <retval> ])
        (reg:SI 63 [ D.1993 ])) ../../test-cfcss.c:19 -1
     (nil))

(jump_insn 51 50 52 9 (set (pc)
        (label_ref 53)) ../../test-cfcss.c:19 -1
     (nil)
 -> 53)
;; End of basic block 9 -> ( 11)

;; Succ edge  11

(barrier 52 51 58)

;; Start of basic block () -> 10
(note 58 52 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 58 56 10 (clobber (reg/i:SI 0 ax)) ../../test-cfcss.c:20 -1
     (nil))

(insn 56 55 53 10 (clobber (reg:SI 64 [ <retval> ])) ../../test-cfcss.c:20 -1
     (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 53 56 59 11 1 "" [1 uses])

(note 59 53 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 54 59 57 11 (set (reg/i:SI 0 ax)
        (reg:SI 64 [ <retval> ])) ../../test-cfcss.c:20 -1
     (nil))

(insn 57 54 0 11 (use (reg/i:SI 0 ax)) ../../test-cfcss.c:20 -1
     (nil))
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

